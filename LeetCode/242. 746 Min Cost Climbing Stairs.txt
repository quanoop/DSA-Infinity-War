// Q:

// Comments

// Initial Instinct

// Solution Code
class Solution {
public:
    int helper(vector<int>&cost, vector<int>&dp, int i){
        if(i>=cost.size()-1) return 0;

        if(dp[i]!=-1) return dp[i];

        int ans = cost[i] + helper(cost, dp, i+1);
        if(i+1<cost.size()){
            ans = min(ans, cost[i+1]+helper(cost, dp,i+2));
        }

        return dp[i] = ans;
        
    }
    int minCostClimbingStairs(vector<int>& cost) {
        vector<int> dp(cost.size(), -1);
        return helper(cost, dp, 0);
    }
};

// Optimised solution


// FeedBack and more