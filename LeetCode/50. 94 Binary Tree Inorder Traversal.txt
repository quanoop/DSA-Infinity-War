//Q: 


//Comments


//Initial Instinct




//Solution Code
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void printinorder(TreeNode *r, vector<int> &t)
{
    if (r == NULL)
        return;
    printinorder(r->left,t);
    t.push_back(r->val);
    printinorder(r->right,t);
}
    vector<int> inorderTraversal(TreeNode* root) {
         vector<int> v;
        printinorder(root, v);
        return v;
    }
};




//Optimised solution

Look the solution section of Leetcode.



//FeedBack and more