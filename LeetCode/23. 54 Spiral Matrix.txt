//Q: 


//Comments


//Initial Instinct




//Solution Code
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        int m = matrix.size();
        int n = matrix[0].size();
        int sr = 0, er = m-1;
        int sc = 0, ec = n-1;
        int count = 0 ;
        while(sr<=er&&sc<=ec){
            for(int i=sc;i<=ec;i++){
                ans.push_back(matrix[sr][i]);
                count++;
            }
            sr++;
            if(m*n==count) return ans;
            
            for(int i = sr;i<=er;i++){
                ans.push_back(matrix[i][ec]);
                count++;
            }
            ec--;
            if(m*n==count) return ans;
            
            for(int i = ec;i>=sc;i--){
                count++;
                ans.push_back(matrix[er][i]);
            }
            er--;
             if(m*n==count) return ans;
            
            for(int i = er;i>=sr;i--){
                ans.push_back(matrix[i][sc]);
                count ++;
            }
            sc++;
             if(m*n==count) return ans;
            
        }
        return ans;
    }
};




//Optimised solution



//FeedBack and more