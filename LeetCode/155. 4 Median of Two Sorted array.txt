// Q:

// Comments

// Initial Instinct

// Solution Code
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector<int> merged;
        int m = nums1.size();
        int n = nums2.size();
        
        int i = 0, j=0;
        
        while(i<m and j  < n){
            if(nums1[i]<nums2[j]){
                merged.push_back(nums1[i]);
                i++;
            } else {
                merged.push_back(nums2[j]);
                j++;
            }
            
        }
        
        while(i<m){
            merged.push_back(nums1[i]);
            i++;
        }
        
        while(j<n){
            merged.push_back(nums2[j]);
            j++;
        }
        
        if((m+n)%2==1) return (double)merged[(m+n)/2];
        
        int a = m + n;
        return (merged[a/2]+merged[a/2-1])/2.0;
    }
};

// Optimised solution

// FeedBack and more