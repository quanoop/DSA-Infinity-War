//Q: 


//Comments


//Initial Instinct




//Solution Code
class Solution {
public:
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
        vector<string> ans;
        unordered_map<char,char> map1;
        unordered_map<char,char> map2;
        int n = words.size();
        int m = pattern.size();
        int flag = 1;
        for(int i = 0;i<n;i++){
            for(int j = 0;j<m;j++){
                char a = pattern[j];
                char b = words[i][j];
                
                if(map1.find(a)==map1.end()){
                    map1[a]=b;
                }
                if(map2.find(b)==map2.end()){
                    map2[b]=a;
                }
                if(map1[a]!=b || map2[b]!=a){
                    flag=0;
                    break;
                }
                
                
            }
            if(flag){
                ans.push_back(words[i]);
            }
            map1.clear();
            map2.clear();
            flag=1;
        }
        
        return ans;
    }
};




//Optimised solution



//FeedBack and more