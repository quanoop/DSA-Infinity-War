// Q:

// Comments

// Initial Instinct

// Solution Code
class Solution {
public:
    bool helper(string &s, int index, unordered_set<string> &set , vector<int> &dp){
        if(index == s.length()){
            return true;
        } 
        if(dp[index]!=-1){
            return dp[index];
        }
        int n = s.size();
        string str = "";
        for(int i = index;i<n;i++){
            str+=s[i];
            if(set.find(str)!=set.end()){
                bool temp = helper(s, i+1, set, dp);
                if(temp){
                    dp[index]=true;
                    return true;
                }
            }
        }
        dp[index]= false;
        return false;
        
    }
    bool wordBreak(string s, vector<string>& wordDict) {
        unordered_set<string> set;
        for(string str: wordDict){
            set.insert(str);
        }
        int n = s.length();
        vector<int> dp(n,-1);
        return helper(s, 0, set, dp);
        
    }
};

// Optimised solution

// FeedBack and more