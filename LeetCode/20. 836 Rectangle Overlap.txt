//Q: 


//Comments


//Initial Instinct




//Solution Code
class Solution {
public:
    bool isRectangleOverlap(vector<int>& rec1, vector<int>& rec2) {
        long long int left = max(rec1[0], rec2[0]);
         long long int right = min(rec1[2], rec2[2]);
        long long  int bottom = max(rec1[1], rec2[1]);
         long long int top = min(rec1[3], rec2[3]);
        long long  int A = 0;
        if((left<right)&&(top>bottom)){
            A = (right-left)*(top - bottom);
        }
        
        if(A==0){
            return false;
        } 
        return true;
    }
};




//Optimised solution
class Solution {
    public boolean isRectangleOverlap(int[] rec1, int[] rec2) {
        // check if either rectangle is actually a line
        if (rec1[0] == rec1[2] || rec1[1] == rec1[3] ||
            rec2[0] == rec2[2] || rec2[1] == rec2[3]) {
            // the line cannot have positive overlap
            return false;
        }

        return !(rec1[2] <= rec2[0] ||   // left
                 rec1[3] <= rec2[1] ||   // bottom
                 rec1[0] >= rec2[2] ||   // right
                 rec1[1] >= rec2[3]);    // top
    }
}



//FeedBack and more