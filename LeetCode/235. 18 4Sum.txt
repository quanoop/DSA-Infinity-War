// Q:

// Comments

// Initial Instinct

// Solution Code
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        set<vector<int>> set;
        if(nums.size()<4) return ans;
        for(int i=0;i<=n-4;i++){
            for(int j = i+1;j<=n-3;j++){
                for(int k = j+1,l=n-1;k<l;){
                        if((long long)nums[i]+(long long)nums[j]+(long long)nums[k]+(long long)nums[l]==(long long)target && j!=k and k!=l and l!=j and i!=j){
                        set.insert({nums[i], nums[j], nums[k], nums[l]});
                        k++;
                        l--;
                        } else if((long long)nums[i]+(long long)nums[j]+(long long)nums[k]+(long long)nums[l]>(long long)target){
                            l--;
                        } else {
                            k++;
                        }
                }
            }
        }

        for(vector<int> x : set){
            ans.push_back(x);
        }

        return ans;
    }
};

// Optimised solution


// FeedBack and more