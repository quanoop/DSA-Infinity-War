// Q:

// Comments

// Initial Instinct

// Solution Code
class Solution {
public:
    int findCenter(vector<vector<int>>& edges) {
        int n = edges.size()+1;
    
    vector<vector<int>> g(n+1);
    
    for(vector<int> e : edges){
        g[e[0]].push_back(e[1]);
        g[e[1]].push_back(e[0]);
    }
    
   for(int i = 1;i<=n;i++){
       if(g[i].size()==n-1) return i;
   }
   
   return 0;
    }
};


// Optimised solution

Approach
It is already mentioned in the question that the graph is always an valid star graph.
In start graph there will be an only one element which is connected to all the other elements .
So if the element occurs in all the arrays then it is the center element of star graph.
So we only check which of the element of the arr[0] array occurs also in the arr[1],which ever the element occurs in both the arrays is our answer because it will definitely occurs in all other arrays also.
Complexity
Time complexity:
O(1)

Space complexity:
O(1)

Code
class Solution {
    public int findCenter(int[][] edges) {
        
    if(edges[0][0]==edges[1][0]||edges[0][0]==edges[1][1])return edges[0][0];
    
     
    return edges[0][1];

    }
}




// FeedBack and more