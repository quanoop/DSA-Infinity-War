//Q: 
Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.



//Comments


//Initial Instinct




//Solution Code
class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.length()!=t.length()) return false;
        
        unordered_map<char, int> ss, tt;
        for(int i = 0; i<s.length();i++){
            if(ss.find(s[i])==ss.end()){
                ss[s[i]]=1;
            }
            else {
                ss[s[i]]+=1;
            }
            if(tt.find(t[i])==tt.end()){
                tt[t[i]]=1;
            }
            else {
                tt[t[i]]+=1;
            }
        }
        
        for(int i = 0; i<t.length();i++){
            if(ss[s[i]]!=tt[s[i]]) return false;
        }
        
        return true;
    }
};




//Optimised solution
class Solution {
public:
    bool isAnagram(string s, string t) 
    {
		// If size is not equal we can declare straight away, that its not an anagram.
        if (s.size() != t.size())
            return false;
        unordered_map<char, int> mp1, mp2;
		// Count number of character occurs in both the strings.
        for (char c: s)
            mp1[c]++;
        for (char c: t)
            mp2[c]++;
		// If occurrance of each character is same in both the strings, then the string is anagram.
        for (int i = 0; i < s.size(); i++)
            if (mp1[s[i]] != mp2[s[i]])
                return false;
        return true;
    }
};



//FeedBack and more