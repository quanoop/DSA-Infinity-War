// Q:

// Comments

// Initial Instinct

// Solution Code
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        vector<int> ans(m+n,0);
        int i=0,j=0,k=0;
        while(i<m and j<n){
            if(nums1[i]<nums2[j]){
                ans[k]=nums1[i];
                i++;
            } else {
                ans[k]=nums2[j];
                j++;
            }
            k++;
        }
        
        while(i<m){
            ans[k]=nums1[i];
                i++;
                k++;
        }
        
        while(j<n){
            ans[k]=nums2[j];
                j++;
                k++;
        }
        
        nums1 = ans;
        
    }
};

// Optimised solution

class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        
        int i =m-1,j=n-1, k = m+n-1;
        if(m==0) nums1 = nums2 ;

        while(i>=0 and j>=0 )
        {
            if(nums1[i]>= nums2[j])
            {
                nums1[k--] = nums1[i--];
            }
            else
            nums1[k--] = nums2[j--];
        }

        while(j>=0)
        {
            nums1[k--] = nums2[j--];
        }

    }
};


// FeedBack and more