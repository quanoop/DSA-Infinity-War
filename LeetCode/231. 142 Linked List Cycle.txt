// Q:

// Comments

// Initial Instinct

// Solution Code
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head==NULL or head->next==NULL) return NULL;
        ListNode* a = head;
        ListNode* b = head;
        while(b and b->next){
            a=a->next;
            b=b->next->next;

            if(a==b) break;
        }

        if(b==NULL or b->next==NULL) return NULL;

        b = head;
        while(a!=b){
            a = a->next;
            b = b->next;
        }

        return a;
    }
};

// Optimised solution


// FeedBack and more