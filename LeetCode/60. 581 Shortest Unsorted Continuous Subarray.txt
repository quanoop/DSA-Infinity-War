//Q: 


//Comments


//Initial Instinct




//Solution Code
class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int n = nums.size();
        if(n==1) return 0;
        int s=INT_MAX, l=INT_MIN;
        if(nums[0]>nums[1]){
            s=l=nums[0];
         }
        for(int i =1;i<n-1;i++){
            if(nums[i]<nums[i-1] || nums[i]>nums[i+1]){
                s=min(nums[i], s);
                l=max(nums[i], l);
            }
        }
        if(nums[n-1]<nums[n-2]){
            s=min(nums[n-1], s);
            l=max(nums[n-1], l);
        }
        if(s==INT_MAX) return 0;
        int left, right;
        for(int i = 0;i<n;i++){
            if(nums[i]>s){
                left = i;
                break;
            } 
        }
        for(int i = n-1;i>=0;i--){
            if(nums[i]<l){
                right = i;
                break;
            } 
        }
        
        return right - left + 1;
    }
};




//Optimised solution



//FeedBack and more