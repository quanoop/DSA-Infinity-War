//Q: 


//Comments


//Initial Instinct




//Solution Code
class Solution {
public:
    
    int helper(vector<int>& nums, int target, vector<int>&dp){
        if(target<0) return 0;
        
        if(target==0) return 1;
        
        if(dp[target]!=-1) return dp[target];
        
        int n=nums.size(), ans=0;
        
        for(int i = 0; i<n; i++){
            ans+=helper(nums, target-nums[i], dp);
        }
        
        dp[target]=ans;
        
        return ans;
    }
    
    int combinationSum4(vector<int>& nums, int target, int currSum=0) {
        vector<int> dp(1001, -1);
        return helper(nums, target, dp);
    }
};




//Optimised solution



//FeedBack and more