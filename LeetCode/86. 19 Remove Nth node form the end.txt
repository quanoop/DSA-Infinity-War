// Q:

// Comments

// Initial Instinct

// Solution Code
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *one = head;
    ListNode *two = head;
    for (int i = 0; i < n; i++)
        two = two->next;
        
    if(two==NULL){
        head=head->next;
        return head;
    }

    while (two != NULL)
    {
        if (two->next == NULL)
        {
            one->next = one->next->next;
            return head;
        }
        else
        {
            one = one->next;
            two = two->next;
        }
    }
    return head;
    }
};

// Optimised solution

// FeedBack and more