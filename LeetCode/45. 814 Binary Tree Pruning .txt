//Q: 


//Comments


//Initial Instinct




//Solution Code
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int helper(TreeNode* root){
        if(root->right==NULL && root->left==NULL) return root->val;
        int l=0,r=0;
        if(root->right){
            r=helper(root->right);
        }
        if(root->left){
            l=helper(root->left);
        }
        if(l==0){
            root->left=NULL;
        }
        if(r==0){
            root->right=NULL;
        }
        if((root->val + r + l)>0) return 1;
        else return 0;
        
    }
    TreeNode* pruneTree(TreeNode* root) {
        return helper(root)?root:NULL;
    }
};




//Optimised solution



//FeedBack and more