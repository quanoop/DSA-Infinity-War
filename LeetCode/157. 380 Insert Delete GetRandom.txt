// Q:

// Comments

// Initial Instinct

// Solution Code
class RandomizedSet {
public:
    
    unordered_map<int,int> m;
    vector<int> v;
    int s;
    RandomizedSet() {
        s=0;
    }
    
    bool insert(int val) {
        if(m.find(val)!=m.end()){
           
            return false;
        }
         m[val]=s;
        s++;
        v.push_back(val);
        return true;
        
    }
    
    bool remove(int val) {
                if(m.find(val)!=m.end()){
                    int i=m[val];
                    v[i]=v[s-1];
                    m[v[i]]=i;
                    v.pop_back();
                    s--;
                   m.erase(val);
               
            return true;
        }
        return false;
    }
    
    int getRandom() {
       return v[rand()%v.size()];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */

// Optimised solution

// FeedBack and more