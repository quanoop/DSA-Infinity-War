// Q:

// Comments

// Initial Instinct

// Solution Code
class Solution {
public:
    set<vector<int>> ans;
    void helper(vector<int>& nums, int i, int n){
        if(i==n){
            ans.insert(nums);
            return;
        }
        for(int j = i;j<n;j++){
            swap(nums[i],nums[j]);
            helper(nums, i+1, n);
            swap(nums[i],nums[j]);
        }
        
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        helper(nums, 0, nums.size());
        vector<vector<int>> a;
        for(auto x: ans){
            a.push_back(x);
        }
        
        return a;
    }
};

// Optimised solution
Look leetcode solution section and discuss section too.

// FeedBack and more