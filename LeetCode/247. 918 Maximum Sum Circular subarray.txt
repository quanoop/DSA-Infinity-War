// Q:

// Comments

// Initial Instinct
Corner case -When all the element in the array are negative then our answer will be max_sum_subarray because if when all the element are negative at that time our total_sum - minsum_subary=0
and it will return 0 means empty subarray thats why we will return max sum of subarray

At last we will return
max(subarray sum in non circular array,Maximum subarray sum in circular array)

// Solution Code
class Solution {
public:
    int maxSubarraySumCircular(vector<int>& nums) {
        int n = nums.size();
        int total = 0, minSum = INT_MAX, maxSum = INT_MIN, maxc = 0, minc=0;
        for(int i = 0;i<n;i++){
            total+=nums[i];
            minc = min(nums[i], nums[i]+minc);
            minSum = min(minSum, minc);
            maxc = max(nums[i], nums[i]+maxc);
            maxSum = max(maxSum, maxc);
        }
        return total == minSum ? maxSum : max(maxSum, total - minSum);
    }
};

// Optimised solution


// FeedBack and more