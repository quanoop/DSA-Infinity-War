//Q: 


//Comments


//Initial Instinct




//Solution Code
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root, string str, vector<string> &s){
        if(root==NULL) return;
        str=str+to_string(root->val);
        if(root->right==NULL && root->left==NULL){
            s.push_back(str);
            return;
        }
        str=str+"->";
        helper(root->left, str,s) ; 
        helper(root->right, str,s) ; 
        
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> ans;
        helper(root, "", ans);
        return ans;
    }
};




//Optimised solution



//FeedBack and more