//Q: 


//Comments


//Initial Instinct




//Solution Code
class Solution {
public:
    int trap(vector<int>& height) {
        int n=height.size();
        vector<int> lmax,rmax(n,0);
        
        lmax.push_back(height[0]);
        for(int i=1;i<n;i++){
            lmax.push_back(max(lmax[i-1], height[i]));
        }
        rmax[n-1]=height[n-1];
        for(int i=n-2;i>=0;i--){
            rmax[i] = max(height[i], rmax[i+1]);
        }
        int ans = 0;
        for(int i=0;i<n;i++){
            ans+=min(lmax[i], rmax[i]) - height[i];
        }
        return ans;
    }
};




//Optimised solution
Look at the leetcode solution tab for this question


//FeedBack and more