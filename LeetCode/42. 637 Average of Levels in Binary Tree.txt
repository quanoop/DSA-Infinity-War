//Q: 


//Comments


//Initial Instinct




//Solution Code
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> ans;
        double sum=0;
        int count=0;
        queue<TreeNode*> q;
        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            TreeNode* t = q.front();
            q.pop();
            if(t==NULL){
                ans.push_back(sum/count);
                sum = 0;
                count = 0;
                if(!q.empty()){
                    q.push(NULL);
                }
            } else {
                sum+=t->val;
                count++;
                if(t->left){
                    q.push(t->left);
                }
                 if(t->right){
                    q.push(t->right);
                }
            }
        } 
        return ans;
    }
};




//Optimised solution



//FeedBack and more